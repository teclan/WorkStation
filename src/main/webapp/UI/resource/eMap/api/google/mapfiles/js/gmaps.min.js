mtd.markerClusterer = null;
mtd.TILE_404_PNG = "mapfiles\\images\\s404.png";
mtd.NOKIA_TOKES = ["normal", "satellite", "hybrid", "terrain"];
mtd.NOKIA_URL = "http://{0}.maps.nlp.nokia.com/maptile/2.1/maptile/newest/{1}.day/{2}/{3}/{4}/256/png8?lg=CHI&token=HoUeCCIK5u8PypRGlv04XQ&app_id=24lrKI2tAqLgPFU8WLAQ";
mtd.STYLEMAP_NOLABEL = "&apistyle=s.e%3Al%7Cp.v%3Aoff&style=47,37%7Csmartmaps";
mtd.STYLEMAP_NIGHT = "&apistyle=p.h%3A%230000b0%7Cp.il%3Atrue%7Cp.s%3A-30&s=Ga&style=api%7Csmartmaps";
mtd.ARCGIS_URL = "http://cache1.arcgisonline.cn/ArcGIS/rest/services/";
mtd.ESRICHINA_COPYRIGHT = "@esrichina GS(2010)6011 Data ©AutoNavi";
mtd.MAP_TYPES = [{
    id: "MAPABC_ROAD",
    name: "AMap Road",
    tileUrl: "http://webrd0{0}.is.autonavi.com/appmaptile?x={1}&y={2}&z={3}&lang=zh_cn&size=1&scale=1&style=8",
    locationUrl: mtd.TILE_PATH + "mapabc\\roadmap\\{0}\\{1}\\{2}.png",
    copyright: "©高德软件 AutoNavi GS(2012) 6035号"
}, {
    id: "MAPABC_SATELLITE",
    name: "AMap satellite",
    tileUrl: "http://webst0{0}.is.autonavi.com/appmaptile?x={1}&y={2}&z={3}&lang=zh_cn&size=1&scale=1&style=6",
    locationUrl: mtd.TILE_PATH + "mapabc\\satellite\\{0}\\{1}\\{2}.jpg",
    copyright: "©高德软件 AutoNavi GS(2012) 6035号"
}, {
    id: "MAPABC_HYBRID",
    name: "AMap hybrid",
    tileUrl: "http://webst0{0}.is.autonavi.com/appmaptile?lang=zh_cn&size=1&scale=1&style=6&x={1}&y={2}&z={3}",
    overlayTileUrl: "http://webst0{0}.is.autonavi.com/appmaptile?lang=zh_cn&size=1&scale=1&style=8&x={1}&y={2}&z={3}",
    locationUrl: mtd.TILE_PATH + "mapabc\\satellite\\{0}\\{1}\\{2}.jpg",
    locationOverlayUrl: mtd.TILE_PATH + "mapabc\\overlay\\{0}\\{1}\\{2}.png",
    copyright: "©高德软件 AutoNavi GS(2012) 6035号"
}, {
    id: "GOOGLE_ROAD",
    name: "google road",
    tileUrl: "http://" + mtd.mapsever + "/vt/lyrs=m@" + mtd.GOOGLE_M_VER + "&hl=" + mtd.languageCode + "&gl=cn&src=app&x={1}&y={2}&z={3}&s=Galileo" + mtd.GOOGLE_HD_VER + mtd.STYLE_PARAMS_URL,
    locationUrl: mtd.TILE_PATH + "googlemaps\\roadmap\\{0}\\{1}\\{2}.png",
    copyright: "©Google GS(2011)6020 AutoNavi"
}, {
    id: "GOOGLE_SATELLITE",
    name: "google satellite",
    tileUrl: "http://" + mtd.mapsever + "/vt/lyrs=s@" + mtd.GOOGLE_S_VER + "&hl=" + mtd.languageCode + "&gl=cn&x={1}&y={2}&z={3}&s=Galileo" + mtd.GOOGLE_HD_VER,
    locationUrl: mtd.TILE_PATH + "googlemaps\\satellite\\{0}\\{1}\\{2}.jpg",
    copyright: "Imagery ©2014 Cnes/Spot Image,DigitalGlobe,GeoEye"
}, {
    id: "GOOGLE_SATELLITE_EN",
    name: "google satellite en",
    tileUrl: "http://khm{0}.google.com/kh/v=" + mtd.GOOGLE_S_VER + "&x={1}&y={2}&z={3}&s=Galileo",
    locationUrl: mtd.TILE_PATH + "googlemaps\\satellite_en\\{0}\\{1}\\{2}.jpg",
    locationOverlayUrl: mtd.TILE_PATH + "googlemaps\\overlay\\{0}\\{1}\\{2}.png",
    copyright: "Imagery ©2014 Cnes/Spot Image,DigitalGlobe,GeoEye"
}, {
    id: "GOOGLE_HYBRID",
    name: "google hybrid",
    tileUrl: "http://" + mtd.mapsever + "/vt/lyrs=s@" + mtd.GOOGLE_S_VER + "&hl=" + mtd.languageCode + "&gl=cn&src=app&x={1}&y={2}&z={3}&s=Galileo" + mtd.GOOGLE_HD_VER,
    overlayTileUrl: "http://" + mtd.mapsever + "/vt/imgtp=png32&lyrs=h@" + mtd.GOOGLE_H_VER + "&hl=" + mtd.languageCode + "&gl=cn&src=app&x={1}&y={2}&z={3}&s=Galileo" + mtd.GOOGLE_HD_VER + mtd.STYLE_PARAMS_URL,
    locationUrl: mtd.TILE_PATH + "googlemaps\\satellite\\{0}\\{1}\\{2}.jpg",
    locationOverlayUrl: mtd.TILE_PATH + "googlemaps\\overlay\\{0}\\{1}\\{2}.png",
    copyright: "Imagery ©2014 TerraMetrics, Data ©2014 GS(2011)6020 AutoNavi"
}, {
    id: "GOOGLE_TERRAIN",
    name: "google terrain",
    tileUrl: "http://" + mtd.mapsever + "/vt/lyrs=t@132,r@" + mtd.GOOGLE_M_VER + "&hl=" + mtd.languageCode + "&gl=cn&src=app&x={1}&y={2}&z={3}&s=Gali" + mtd.GOOGLE_HD_VER + mtd.STYLE_PARAMS_URL,
    locationUrl: mtd.TILE_PATH + "googlemaps\\terrain\\{0}\\{1}\\{2}.jpg",
    copyright: "Data ©2014 GS(2011)6020 AutoNavi"
}, {
    id: "GOOGLE_ROAD_NOLABEL",
    name: "GOOGLE_ROAD_NOLABEL",
    tileUrl: "http://mt{0}.google.cn/vt/lyrs=m@" + mtd.GOOGLE_M_VER + "&hl=zh-CN&gl=cn&src=app&x={1}&y={2}&z={3}&s=Galileo" + mtd.STYLEMAP_NOLABEL + mtd.GOOGLE_HD_VER,
    locationUrl: mtd.TILE_PATH + "googlemaps\\roadmap_nolabel\\{0}\\{1}\\{2}.png",
    copyright: "Data ©2014 GS(2011)6020 AutoNavi"
}, {
    id: "GOOGLE_HYBRID_NOLABEL",
    name: "google hybrid no label",
    tileUrl: "http://" + mtd.mapsever + "/vt/lyrs=s@" + mtd.GOOGLE_S_VER + "&hl=" + mtd.languageCode + "&gl=cn&src=app&x={1}&y={2}&z={3}&s=Galileo" + mtd.GOOGLE_HD_VER,
    overlayTileUrl: "http://" + mtd.mapsever + "/vt/imgtp=png32&lyrs=h@" + mtd.GOOGLE_H_VER + "&hl=" + mtd.languageCode + "&gl=cn&src=app&x={1}&y={2}&z={3}&s=Galil" + mtd.STYLEMAP_NOLABEL + mtd.GOOGLE_HD_VER,
    locationUrl: mtd.TILE_PATH + "googlemaps\\satellite\\{0}\\{1}\\{2}.jpg",
    locationOverlayUrl: mtd.TILE_PATH + "googlemaps\\overlay_nolabel\\{0}\\{1}\\{2}.png",
    copyright: "Imagery ©2014 TerraMetrics, Data ©2014 GS(2011)6020 AutoNavi"
}, {
    id: "GOOGLE_TERRAIN_NOLABEL",
    name: "google terrain nolabel",
    tileUrl: "http://" + mtd.mapsever + "/vt/lyrs=t@132,r@" + mtd.GOOGLE_M_VER + "&hl=" + mtd.languageCode + "&gl=cn&src=app&x={1}&y={2}&z={3}&s=Gali" + mtd.STYLEMAP_NOLABEL + mtd.GOOGLE_HD_VER,
    locationUrl: mtd.TILE_PATH + "googlemaps\\terrain_nolabel\\{0}\\{1}\\{2}.jpg",
    copyright: "Data ©2014 GS(2011)6020 AutoNavi"
}, {
    id: "SOSO_ROAD",
    name: "soso road",
    tileUrl: "http://p{0}.map.gtimg.com/maptilesv3/{1}.png",
    locationUrl: mtd.TILE_PATH + "sosomaps\\roadmap\\{0}\\{1}\\{2}.png",
    copyright: "©2014 Tencent - GS(2014)6026号 Data ©NavInfo"
}, {
    id: "SOSO_SATELLITE",
    name: "soso satellite",
    tileUrl: "http://p{0}.map.gtimg.com/sateTiles/{1}.jpg",
    locationUrl: mtd.TILE_PATH + "sosomaps\\satellite\\{0}\\{1}\\{2}.jpg",
    copyright: "©2014 Tencent - GS(2014)6026号 Imagery ©DigitalGlobe,Chinasiwei"
}, {
    id: "SOSO_HYBRID",
    name: "soso hybrid",
    tileUrl: "http://p{0}.map.gtimg.com/sateTiles/{1}.jpg",
    overlayTileUrl: "http://p{0}.map.gtimg.com/sateTranTilesv3/{1}.png",
    locationUrl: mtd.TILE_PATH + "sosomaps\\satellite\\{0}\\{1}\\{2}.jpg",
    locationOverlayUrl: mtd.TILE_PATH + "sosomaps\\overlay\\{0}\\{1}\\{2}.png",
    copyright: "©2014 Tencent - GS(2014)6026号 Imagery ©DigitalGlobe,Chinasiwei,Data ©NavInfo"
}, {
    id: "SOSO_TERRAIN",
    name: "soso TERRAIN",
    tileUrl: "http://p{0}.map.gtimg.com/demTiles/{1}.jpg",
    overlayTileUrl: "http://p{0}.map.gtimg.com/demTranTiles/{1}.png",
    locationUrl: mtd.TILE_PATH + "sosomaps\\terrain\\{0}\\{1}\\{2}.jpg",
    locationOverlayUrl: mtd.TILE_PATH + "sosomaps\\terrain_overlay\\{0}\\{1}\\{2}.png",
    copyright: "©2014 Tencent - GS(2013)6030号  Data© CIAT,Data©  AutoNav"
}, {
    id: "YAHOO_ROAD",
    name: "yahoo road",
    tileUrl: "http://img.ditu.aliyun.com/get_png?v=v6&x={0}&y={1}&z={2}",
    locationUrl: mtd.TILE_PATH + "yahoomaps\\roadmap\\{0}\\{1}\\{2}.png",
    copyright: "©2014 Aliyun-Map Data ©AutoNavi GS(2010)6011"
}, {
    id: "YAHOO_SATELLITE",
    name: "yahoo satellite",
    tileUrl: "http://maps2.yimg.com/ae/ximg?v=1.9&t=a&s=256&r=1&x={0}&y={1}&z={2}",
    locationUrl: mtd.TILE_PATH + "yahoomaps\\satellite\\{0}\\{1}\\{2}.png",
    copyright: "©2014 Yahoo Maps"
}, {
    id: "NOKIA_ROAD",
    name: "nokia road",
    tileUrl: mtd.NOKIA_URL,
    locationUrl: mtd.TILE_PATH + "nokiamaps\\roadmap\\{0}\\{1}\\{2}.png",
    copyright: "©2014 Nokia"
}, {
    id: "NOKIA_SATELLITE",
    name: "nokia satellite",
    tileUrl: mtd.NOKIA_URL,
    locationUrl: mtd.TILE_PATH + "nokiamaps\\satellite\\{0}\\{1}\\{2}.png",
    copyright: "©2014 Nokia"
}, {
    id: "NOKIA_HYBRID",
    name: "nokia hybrid",
    tileUrl: mtd.NOKIA_URL,
    locationUrl: mtd.TILE_PATH + "nokiamaps\\hybrid\\{0}\\{1}\\{2}.png",
    copyright: "©2014 Nokia"
}, {
    id: "NOKIA_TERRAIN",
    name: "nokia terrain",
    tileUrl: mtd.NOKIA_URL,
    locationUrl: mtd.TILE_PATH + "nokiamaps\\terrain\\{0}\\{1}\\{2}.png",
    copyright: "©2014 Nokia"
}, {
    id: "BING_ROAD_CN",
    name: "bing maps cn",
    tileUrl: "http://r{0}.tiles.ditu.live.com/tiles/r{1}.png?g=96&mkt=zh-cn",
    locationUrl: mtd.TILE_PATH + "bingmaps\\roadmap_cn\\{0}\\{1}\\{2}.png",
    copyright: "©2014 AutoNavi ©2014 Microsoft"
}, {
    id: "BING_ROAD",
    name: "bing maps",
    tileUrl: "http://r{0}.ortho.tiles.virtualearth.net/tiles/r{1}.png?g=2560",
    locationUrl: mtd.TILE_PATH + "bingmaps\\roadmap\\{0}\\{1}\\{2}.png",
    copyright: "©2014 Nokia ©2014 Microsoft"
}, {
    id: "BING_SATELLITE",
    name: "bing satellite",
    tileUrl: "http://a{0}.ortho.tiles.virtualearth.net/tiles/a{1}.jpeg?g=2560&mkt=en&n=z",
    locationUrl: mtd.TILE_PATH + "bingmaps\\satellite\\{0}\\{1}\\{2}.jpg",
    copyright: "©2014 Microsoft"
}, {
    id: "BING_HYBRID",
    name: "bing hybrid",
    tileUrl: "http://a{0}.ortho.tiles.virtualearth.net/tiles/a{1}.jpeg?g=2560&mkt=en&n=z",
    locationUrl: mtd.TILE_PATH + "bingmaps\\hybrid\\{0}\\{1}\\{2}.jpg",
    locationOverlayUrl: mtd.TILE_PATH + "tianditu\\overlay_s\\{0}\\{1}\\{2}.png",
    copyright: "©2014 Microsoft"
}, {
    id: "SUPERMAP_ROAD",
    name: "supermap road",
    tileUrl: "http://t0.supermapcloud.com/FileService/image?map=quanguo&type=web&x={0}&y={1}&z={2}",
    locationUrl: mtd.TILE_PATH + "supermap\\roadmap\\{0}\\{1}\\{2}.png",
    copyright: "©2014 SuperMap - GS(2011)6014号"
}, {
    id: "SMARTEARTH_ROAD",
    name: "smartearth road",
    tileUrl: "http://f.smartearth.cn:9000/SE_PIR?desc=emgutm&uid=smartearth&x={0}&y={1}&lev={2}",
    locationUrl: mtd.TILE_PATH + "smartearth\\roadmap\\{0}\\{1}\\{2}.png",
    copyright: "©2014 SmartEarth - GS(2012)6024号"
}, {
    id: "ARCGIS_COMMUNITY",
    name: "ARCGIS_Community",
    tileUrl: mtd.ARCGIS_URL + "ChinaOnlineCommunity/MapServer/tile/{0}/{1}/{2}",
    locationUrl: mtd.TILE_PATH + "arcgis\\Community\\{0}\\{1}\\{2}.png",
    copyright: mtd.ESRICHINA_COPYRIGHT
}, {
    id: "ARCGIS_STREETCOLOR",
    name: "ARCGIS_StreetColor",
    tileUrl: mtd.ARCGIS_URL + "ChinaOnlineStreetColor/MapServer/tile/{0}/{1}/{2}",
    locationUrl: mtd.TILE_PATH + "arcgis\\StreetColor\\{0}\\{1}\\{2}.png",
    copyright: mtd.ESRICHINA_COPYRIGHT
}, {
    id: "ARCGIS_STREETWARM",
    name: "ARCGIS_StreetWarm",
    tileUrl: mtd.ARCGIS_URL + "ChinaOnlineStreetWarm/MapServer/tile/{0}/{1}/{2}",
    locationUrl: mtd.TILE_PATH + "arcgis\\StreetWarm\\{0}\\{1}\\{2}.png",
    copyright: mtd.ESRICHINA_COPYRIGHT
}, {
    id: "ARCGIS_STREETCOLD",
    name: "ARCGIS_StreetCold",
    tileUrl: mtd.ARCGIS_URL + "ChinaOnlineStreetCold/MapServer/tile/{0}/{1}/{2}",
    locationUrl: mtd.TILE_PATH + "arcgis\\StreetCold\\{0}\\{1}\\{2}.png",
    copyright: mtd.ESRICHINA_COPYRIGHT
}, {
    id: "ARCGIS_STREETGRAY",
    name: "ARCGIS_StreetGray",
    tileUrl: mtd.ARCGIS_URL + "ChinaOnlineStreetGray/MapServer/tile/{0}/{1}/{2}",
    locationUrl: mtd.TILE_PATH + "arcgis\\StreetGray\\{0}\\{1}\\{2}.png",
    copyright: mtd.ESRICHINA_COPYRIGHT
}, {
    id: "ARCGIS_COMMUNITYENG",
    name: "ARCGIS_CommunityENG",
    tileUrl: mtd.ARCGIS_URL + "ChinaOnlineCommunityENG/MapServer/tile/{0}/{1}/{2}",
    locationUrl: mtd.TILE_PATH + "arcgis\\CommunityEN\\{0}\\{1}\\{2}.png",
    copyright: mtd.ESRICHINA_COPYRIGHT
}, {
    id: "ARCGIS_SATELLITE",
    name: "ARCGIS_SATELLITE",
    tileUrl: "http://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{0}/{1}/{2}",
    locationUrl: mtd.TILE_PATH + "arcgis\\satellite\\{0}\\{1}\\{2}.jpg",
    copyright: mtd.ESRICHINA_COPYRIGHT
}, {
    id: "TIANDITU_ROAD",
    name: "tianditu road",
    tileUrl: "http://t{0}.tianditu.com/DataServer?T=vec_w&x={1}&y={2}&l={3}",
    overlayTileUrl: "http://t{0}.tianditu.com/DataServer?T=cva_w&x={1}&y={2}&l={3}",
    locationUrl: mtd.TILE_PATH + "tianditu\\roadmap\\{0}\\{1}\\{2}.png",
    locationOverlayUrl: mtd.TILE_PATH + "tianditu\\overlay_r\\{0}\\{1}\\{2}.png",
    copyright: "国家测绘地理信息局 - GS(2012)6013号"
}, {
    id: "TIANDITU_SATELLITE",
    name: "tianditu satellite",
    tileUrl: "http://t{0}.tianditu.com/DataServer?T=img_w&x={1}&y={2}&l={3}",
    locationUrl: mtd.TILE_PATH + "tianditu\\satellite\\{0}\\{1}\\{2}.jpg",
    copyright: "国家测绘地理信息局 - GS(2012)6013号"
}, {
    id: "TIANDITU_HYBRID",
    name: "tianditu hybrid",
    tileUrl: "http://t{0}.tianditu.com/DataServer?T=img_w&x={1}&y={2}&l={3}",
    overlayTileUrl: "http://t{0}.tianditu.com/DataServer?T=cia_w&x={1}&y={2}&l={3}",
    locationUrl: mtd.TILE_PATH + "tianditu\\satellite\\{0}\\{1}\\{2}.jpg",
    locationOverlayUrl: mtd.TILE_PATH + "tianditu\\overlay_s\\{0}\\{1}\\{2}.png",
    copyright: "国家测绘地理信息局 - GS(2012)6013号"
}, {
    id: "TIANDITU_TERRAIN",
    name: "tianditu terrain",
    tileUrl: "http://t{0}.tianditu.cn/DataServer?T=ter_w&X={1}&Y={2}&L={3}",
    overlayTileUrl: "http://t{0}.tianditu.com/DataServer?T=cta_w&X={1}&Y={2}&L={3}",
    locationUrl: mtd.TILE_PATH + "tianditu\\terrain\\{0}\\{1}\\{2}.jpg",
    locationOverlayUrl: mtd.TILE_PATH + "tianditu\\overlay_t\\{0}\\{1}\\{2}.png",
    copyright: "国家测绘地理信息局 - GS(2012)6013号"
}, {
    id: "TOPOMAPPER_TERRAIN",
    name: "Topomapper terrain",
    tileUrl: "http://www.topomapper.com/cgi-bin/tilecache-2.11b/tilecache.py?LAYERS=topomapper_gmerc&FORMAT=image%2Fjpeg&SERVICE=WMS&VERSION=1.1.1&REQUEST=GetMap&STYLES=&SRS=EPSG%3A900913&BBOX={0}&WIDTH=256&HEIGHT=256",
    overlayTileUrl: "",
    locationUrl: mtd.TILE_PATH + "topomapper\\terrain\\{0}\\{1}\\{2}.jpg",
    copyright: "Image data hosted by Aflogis"
}, {
    id: "physical_relief_map",
    name: "physical_relief_map",
    tileUrl: "http://www.topomapper.com/cgi-bin/tilecache-2.10/tilecache.py?LAYERS=relief_physical_z&FORMAT=image%2Fjpeg&SERVICE=WMS&VERSION=1.1.1&REQUEST=GetMap&STYLES=&SRS=EPSG%3A900913&BBOX={0}&WIDTH=256&HEIGHT=256",
    overlayTileUrl: "",
    locationUrl: mtd.TILE_PATH + "topomapper\\physical_relief_map\\{0}\\{1}\\{2}.jpg",
    copyright: "Image data hosted by Aflogis"
}, {
    id: "HISTORIC_NLSMAP",
    name: "HISTORIC_NLSMAP",
    tileUrl: "http://t{0}.cz.tileserver.com/nls/{1}/{2}/{3}.jpg",
    overlayTileUrl: "",
    locationUrl: mtd.TILE_PATH + "historic_nlsmap\\terrain\\{0}\\{1}\\{2}.jpg",
    copyright: "Image data hosted by Aflogis"
}, {
    id: "OSM_ROAD",
    name: "OSM_ROAD",
    tileUrl: "http://{0}.tile.openstreetmap.org/{1}/{2}/{3}.png",
    overlayTileUrl: "",
    locationUrl: mtd.TILE_PATH + "OSM\\roadmap\\{0}\\{1}\\{2}.png",
    copyright: "Image data hosted by OSM"
}, {
    id: "EARTH_NIGHT",
    name: "EARTH_NIGHT",
    tileUrl: "https://earthbuilder.googleapis.com/10446176163891957399-13737975182519107424-4/2/maptile/maps?v=2&authToken=Cgh4BrpVUQzWaxCVksGUBQ==&x={0}&y={1}&z={2}&s=",
    overlayTileUrl: "http://mt{0}.google.cn/vt?lyrs=m@" + mtd.GOOGLE_M_VER + "&hl=" + mtd.languageCode + "&x={1}&y={2}&z={3}&s=Gal&apistyle=s.t%3A3%7Cp.v%3Aoff%2Cs.t%3A4%7Cp.v%3Aoff%2Cs.t%3A2%7Cp.v%3Aoff%2Cs.t%3A6%7Cp.v%3Aoff%2Cs.t%3A21%7Cp.v%3Aoff&style=4,37%7Csmartmaps",
    locationUrl: mtd.TILE_PATH + "googlemaps\\EarthNight\\{0}\\{1}\\{2}.jpg",
    locationOverlayUrl: mtd.TILE_PATH + "googlemaps\\EarthNight_overlay\\{0}\\{1}\\{2}.png",
    copyright: "@2013 NASA"
}, {
    id: "NAVINFO_ROAD",
    name: "NAVINFO_ROAD",
    tileUrl: "http://image.fundrive.com.cn/vi/{0}.png",
    overlayTileUrl: "",
    locationUrl: mtd.TILE_PATH + "fundrive\\roadmap\\{0}\\{1}\\{2}.png",
    copyright: "©Navinfo - GS(2011)6002号"
}, {
    id: "NAVINFO_HYBRID",
    name: "NAVINFO_HYBRID",
    tileUrl: "http://image.fundrive.com.cn/vis/{0}.jpg",
    overlayTileUrl: "http://image.fundrive.com.cn/vis2/{0}.png",
    locationUrl: mtd.TILE_PATH + "fundrive\\satellite\\{0}\\{1}\\{2}.jpg",
    locationOverlayUrl: mtd.TILE_PATH + "fundrive\\overlay\\{0}\\{1}\\{2}.png",
    copyright: "©Navinfo - GS(2011)6002号"
}];

function CoordMapType(a) {
    this.tileSize = a;
}
CoordMapType.prototype.getTile = function (d, h, i) {
    var g = "Google: (" + d.x + "," + d.y + ")",
        e = "TMS: (" + d.x + "," + ((1 << h) - d.y - 1) + ")",
        c = "Bing: (" + TileToQuadKey(d.x, d.y, h) + ")",
        b = "Lng-Lat: (" + tileTolng(d.x, h) + "," + tileTolat(d.y, h) + ")",
        f = b + "<br>" + g + "<br>" + e + "<br>" + c;
    var a = i.createElement("div");
    if (mtd.isTrialVersion) {
        if ((d.x + d.y) % 4 == 0) {
            a.innerHTML = mtd.TRIAL_WATERMARK;
        }
    } else {
        a.innerHTML = f;
    }
    a.style.width = this.tileSize.width + "px";
    a.style.height = this.tileSize.height + "px";
    a.style.fontSize = (mtd.isTrialVersion) ? "13px" : "12px";
    a.style.fontWeight = (mtd.isTrialVersion) ? "bold" : "normal";
    a.style.color = (mtd.isTrialVersion) ? "#d71345" : "#d71345";
    a.style.borderStyle = "solid";
    if (mtd.isTrialVersion) {
        a.style.lineHeight = this.tileSize.height + "px";
    }
    a.style.borderWidth = (mtd.isTrialVersion) ? "0px 0 0 0px" : "1px 0 0 1px";
    a.style.textAlign = "center";
    return a;
};

function initialize() {
    mtd.isMSIE = ((document.all) || (navigator.appName == "Netscape")) ? true : false;
    var a = {
        center: new google.maps.LatLng(mtd.DEFAULT_LATITUDE, mtd.DEFAULT_LONGITUDE),
        zoom: mtd.DEFAULT_ZOOM,
        mapTypeControlOptions: {
            mapTypeIds: mtd.mapTypeIds,
            style: google.maps.MapTypeControlStyle.DROPDOWN_MENU
        },
        mapTypeControl: false,
        scaleControl: true,
        streetViewControl: false,
        overviewMapControl: true,
        overviewMapControlOptions: {
            opened: false
        },
        panControlOptions: {
            position: google.maps.ControlPosition.TOP_RIGHT
        },
        zoomControlOptions: {
            position: google.maps.ControlPosition.TOP_RIGHT
        }
    };
    mtd.map = new google.maps.Map(document.getElementById("map_canvas"), a);
    google.maps.event.addListener(mtd.map, "maptypeid_changed", function () {
        if (mtd.overlayExists) {
            removeOverlayMapType();
            mtd.overlayExists = false;
            if (mtd.coordGridExists) {
                removeOverlayMapType();
                addCoordGrid();
            }
        }
        var c = mtd.map.getMapTypeId();
        if ((c === mtd.MAP_TYPES[mtd.EARTH_NIGHT].id) || (c === mtd.MAP_TYPES[mtd.BING_HYBRID].id) || (c === mtd.MAP_TYPES[mtd.GOOGLE_HYBRID].id) || (c === mtd.MAP_TYPES[mtd.GOOGLE_HYBRID_NOLABEL].id) || (c === mtd.MAP_TYPES[mtd.SOSO_HYBRID].id) || (c === mtd.MAP_TYPES[mtd.SOSO_TERRAIN].id) || (c === mtd.MAP_TYPES[mtd.MAPABC_HYBRID].id) || (c === mtd.MAP_TYPES[mtd.TDT_ROAD].id) || (c === mtd.MAP_TYPES[mtd.TDT_HYBRID].id) || (c === mtd.MAP_TYPES[mtd.TDT_TERRAIN].id) || (c === mtd.MAP_TYPES[mtd.GOOGLE_SATELLITE_EN].id) || (c === mtd.MAP_TYPES[mtd.NAVINFO_HYBRID].id)) {
            addMarkerLayersTile(c);
        }
    });
    delphiMapZoomChangedEvent(mtd.DEFAULT_ZOOM);
    google.maps.event.addListener(mtd.map, "zoom_changed", function () {
        var c = this.getZoom();
        delphiMapZoomChangedEvent(c);
    });
    google.maps.event.addListener(mtd.map, "center_changed", function () {
        var c = this.getCenter();
        delphiMapCenterChangedEvent(c.lat(), c.lng());
    });
    google.maps.event.addListener(mtd.map, "rightclick", clearAllOverlays);
    google.maps.event.addListener(mtd.map, "mousemove", listenerMousemoveEvent);
    var b = {
        gridSize: 60,
        maxZoom: 12,
        imagePath: "mapfiles/images/m"
    };
    mtd.markerClusterer = new MarkerClusterer(mtd.map, [], b);
    addCustomMaps();
    if (mtd.showCoordGrid) {
        addCoordGrid();
    }
    showDrawingManager();
    if (mtd.showCopyright) {
        loadCollections();
        window.setTimeout(function () {
            bindingCopyrightNode();
        }, 1000);
    }
}
function changeMapType(c) {
    mtd.map.setMapTypeId(c);
    if (c === mtd.MAP_TYPES[mtd.HISTORIC_NLSMAP].id) {
        var e = new google.maps.LatLng(58.97125, 8.38669),
            b = new google.maps.LatLng(50.41377, -12.92679),
            a = mtd.map.getCenter();
        var d = new google.maps.LatLngBounds(b, e);
        if (!d.contains(a)) {
            mtd.map.fitBounds(d);
        }
    }
}
function bindingCopyrightNode() {
    mtd.copyrightNode = document.createElement("div");
    mtd.copyrightNode.id = "copyright-control";
    mtd.copyrightNode.style.fontSize = "11px";
    mtd.copyrightNode.style.fontFamily = "Arial, sans-serif";
    mtd.copyrightNode.style.margin = "0 0px 0px 2px";
    mtd.copyrightNode.style.whiteSpace = "nowrap";
    mtd.copyrightNode.index = 0;
    mtd.map.controls[google.maps.ControlPosition.BOTTOM_LEFT].push(mtd.copyrightNode);
    google.maps.event.addListener(mtd.map, "idle", updateCopyrights);
    google.maps.event.addListener(mtd.map, "maptypeid_changed", updateCopyrights);
}
function updateCopyrights() {
    var d = "",
        a = mtd.copyrights[mtd.map.getMapTypeId()],
        c = mtd.map.getBounds(),
        b = getCurrentZoom();
    if (a && c && b) {
        d = a.getCopyrightNotice(c, b);
    }
    mtd.copyrightNode.innerHTML = d;
}
function loadCollections() {
    var b, a;
    for (b = 0; b < mtd.MAP_TYPES.length; b++) {
        a = new CopyrightCollection(mtd.MAP_TYPES[b].copyright);
        a.addCopyright(new Copyright(3, new google.maps.LatLngBounds(new google.maps.LatLng(-90, -179), new google.maps.LatLng(90, 180)), 2, ""));
        mtd.copyrights[mtd.MAP_TYPES[b].id] = a;
    }
}
function clearAllOverlays() {
    clearShape();
    try {
        if (mtd.marker) {
            mtd.marker.setMap(null);
            mtd.marker = null;
        }
        if (mtd.infowindow) {
            mtd.infowindow.close();
        }
        while (mtd.markers[0]) {
            mtd.markers.pop().setMap(null);
        }
        mtd.markers = [];
        mtd.markerClusterer.clearMarkers();
        clearNavigationMarker();
        if (mtd.clearButton) {
            mtd.clearButton.setMap(null);
            mtd.clearButton = null;
        }
    } catch (a) {}
}
function clearNavigationMarker() {
    try {
        mtd.totalDistance = 0;
        while (mtd.polylines[0]) {
            mtd.polylines.pop().setMap(null);
        }
        mtd.polylines = [];
        mtd.previousPoint = null;
        mtd.navigationCircle.setMap(null);
        mtd.navigationMarker.setMap(null);
        mtd.navigationMarker = null;
        mtd.navigationCircle = null;
    } catch (a) {}
}
function addCoordGrid() {
    mtd.map.overlayMapTypes.insertAt(0, new CoordMapType(new google.maps.Size(mtd.TILE_SIZE, mtd.TILE_SIZE)));
    mtd.coordGridExists = true;
}
function removeCoordGrid() {
    if (mtd.overlayExists) {
        removeOverlayMapType();
    }
    if (mtd.coordGridExists) {
        removeOverlayMapType();
    }
    mtd.coordGridExists = false;
    if (mtd.overlayExists) {
        addMarkerLayersTile(mtd.map.getMapTypeId());
    }
}
function addCustomMaps() {
    var a;
    for (a = 0; a < mtd.MAP_TYPES.length; a++) {
        mtd.mapTypeIds[a] = mtd.MAP_TYPES[a].id;
        addCustomMap(a);
    }
    if (mtd.DEFAULT_MAPTYPE_INDEX >= mtd.MAP_TYPES.length) {
        mtd.DEFAULT_MAPTYPE_INDEX = mtd.DEFAULT_MAPTYPE_INDEX - 7;
    }
    mtd.map.setMapTypeId(mtd.MAP_TYPES[mtd.DEFAULT_MAPTYPE_INDEX].id);
}
function padTileCoordinate(b, a) {
    switch (Math.floor(Math.log(Math.pow(2, a)) / Math.log(10)) - Math.floor(Math.log(b) / Math.log(10))) {
        case 3:
            return "000" + b;
        case 2:
            return "00" + b;
        case 1:
            return "0" + b;
        default:
            return b;
    }
}
function isNormalizedCoord(b, a) {
    var c = (1 << a);
    if ((b.x < 0) || (b.x >= c) || (b.y < 0) || (b.y >= c)) {
        return true;
    }
    return false;
}
function addCustomMap(d) {
    if ((d < 0) || (d > mtd.MAP_TYPES.length - 1)) {
        return;
    }
    var h = 1,
        b = 18,
        g = new StringBuilder(),
        e = mtd.MAP_TYPES[d].tileUrl,
        c = "",
        f = {};
    if ((d >= mtd.GOOGLE_ROAD) && (d <= mtd.GOOGLE_TERRAIN_NOLABEL)) {
        if ((d === mtd.GOOGLE_TERRAIN) || (d === mtd.GOOGLE_TERRAIN_NOLABEL)) {
            b = 15;
        } else {
            b = 21;
        }
        f = function (j, i) {
            if (isNormalizedCoord(j, i)) {
                return null;
            }
            if (mtd.offlineMode) {
                c = g.format(mtd.MAP_TYPES[d].locationUrl, i, j.x, j.y);
            } else {
                c = g.format(e, getRandom(4), j.x, j.y, i);
            }
            return c;
        };
    } else {
        if ((d === mtd.MAPABC_ROAD) || (d <= mtd.MAPABC_HYBRID)) {
            if ((mtd.GOOGLE_HD_VER.length > 0) && (d === mtd.MAPABC_ROAD)) {
                b = 19;
            }
            f = function (j, i) {
                if (isNormalizedCoord(j, i)) {
                    return null;
                }
                if (mtd.offlineMode) {
                    c = g.format(mtd.MAP_TYPES[d].locationUrl, i, j.x, j.y);
                } else {
                    c = g.format(e, getRandom(4) + 1, j.x, j.y, i);
                    if ((mtd.GOOGLE_HD_VER.length > 0) && (d === mtd.MAPABC_ROAD)) {
                        c = c.replace("webrd", "wprd");
                        c = c.replace("lang=zh_cn&size=1&scale=1&style=8", "style=7");
                    }
                }
                return c;
            };
        } else {
            if ((d === mtd.SOSO_ROAD) || (d === mtd.SOSO_HYBRID) || (d === mtd.SOSO_SATELLITE) || (d === mtd.SOSO_TERRAIN)) {
                h = 2;
                if (d === mtd.SOSO_TERRAIN) {
                    b = 15;
                }
                f = function (j, i) {
                    if (isNormalizedCoord(j, i)) {
                        return null;
                    }
                    if (mtd.offlineMode) {
                        c = g.format(mtd.MAP_TYPES[d].locationUrl, i, j.x, j.y);
                    } else {
                        var k = ((mtd.GOOGLE_HD_VER.length > 0) && (d === mtd.SOSO_ROAD));
                        c = g.format(e, getRandom(4), getQQMapTile(j, i, k));
                        if (k) {
                            c = c.replace("maptilesv3", "hwaptiles");
                        }
                    }
                    return c;
                };
            } else {
                if ((d === mtd.YAHOO_ROAD) || (d === mtd.YAHOO_SATELLITE)) {
                    h = 3;
                    b = 17;
                    f = function (j, i) {
                        if (isNormalizedCoord(j, i)) {
                            return null;
                        }
                        if (mtd.offlineMode) {
                            c = g.format(mtd.MAP_TYPES[d].locationUrl, i, j.x, j.y);
                        } else {
                            if (d === mtd.YAHOO_SATELLITE) {
                                c = g.format(e, j.x, (((1 << (i & 31)) >> 1) - 1) - j.y, i + 1);
                            } else {
                                c = g.format(e, j.x, j.y, i);
                            }
                        }
                        return c;
                    };
                } else {
                    if ((d >= mtd.NOKIA_ROAD) && (d <= mtd.NOKIA_TERRAIN)) {
                        b = 20;
                        f = function (l, k) {
                            if (isNormalizedCoord(l, k)) {
                                return null;
                            }
                            if (mtd.offlineMode) {
                                c = g.format(mtd.MAP_TYPES[d].locationUrl, k, l.x, l.y);
                            } else {
                                var i = ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k"],
                                    j = getRandom(4) + 1;
                                c = g.format(e, j, mtd.NOKIA_TOKES[d - mtd.NOKIA_ROAD], k, l.x, l.y);
                            }
                            return c;
                        };
                    } else {
                        if ((d >= mtd.BING_ROAD_CN) && (d <= mtd.BING_HYBRID)) {
                            if ((d == mtd.BING_SATELLITE) || (d == mtd.BING_HYBRID)) {
                                b = 19;
                            }
                            f = function (j, i) {
                                if (isNormalizedCoord(j, i)) {
                                    return null;
                                }
                                if (mtd.offlineMode) {
                                    c = g.format(mtd.MAP_TYPES[d].locationUrl, i, j.x, j.y);
                                } else {
                                    c = g.format(e, getRandom(4), tileXYToQuadKey(j, i));
                                }
                                return c;
                            };
                        } else {
                            if ((d === mtd.SUPERMAP_ROAD) || (d === mtd.SMARTEARTH_ROAD)) {
                                f = function (j, i) {
                                    if (isNormalizedCoord(j, i)) {
                                        return null;
                                    }
                                    if (mtd.offlineMode) {
                                        c = g.format(mtd.MAP_TYPES[d].locationUrl, i, j.x, j.y);
                                    } else {
                                        c = g.format(e, j.x, j.y, i);
                                    }
                                    return c;
                                };
                            } else {
                                if (((d >= mtd.ARCGIS_Community) && (d <= mtd.ARCGIS_CommunityENG)) || (d === mtd.ARCGIS_SATELLITE)) {
                                    if ((d === mtd.ARCGIS_Community) || (d === mtd.ARCGIS_CommunityENG) || (d === mtd.ARCGIS_SATELLITE)) {
                                        b = 17;
                                    } else {
                                        b = 16;
                                    }
                                    f = function (j, i) {
                                        if (isNormalizedCoord(j, i)) {
                                            return null;
                                        }
                                        if (mtd.offlineMode) {
                                            c = g.format(mtd.MAP_TYPES[d].locationUrl, i, j.x, j.y);
                                        } else {
                                            c = g.format(e, i, j.y, j.x);
                                        }
                                        return c;
                                    };
                                } else {
                                    if ((d >= mtd.TDT_ROAD) && (d <= mtd.TDT_TERRAIN)) {
                                        f = function (j, i) {
                                            if (isNormalizedCoord(j, i)) {
                                                return null;
                                            }
                                            if (mtd.offlineMode) {
                                                c = g.format(mtd.MAP_TYPES[d].locationUrl, i, j.x, j.y);
                                            } else {
                                                c = g.format(e, getRandom(7), j.x, j.y, i);
                                            }
                                            return c;
                                        };
                                    } else {
                                        if ((d === mtd.TOPOMAPPER_TERRAIN) || (d === mtd.PhysicalRelief)) {
                                            b = 13;
                                            h = 1;
                                            if (d === mtd.PhysicalRelief) {
                                                b = 11;
                                            }
                                            f = function (j, i) {
                                                if (isNormalizedCoord(j, i)) {
                                                    return null;
                                                }
                                                if (mtd.offlineMode) {
                                                    c = g.format(mtd.MAP_TYPES[d].locationUrl, i, j.x, j.y);
                                                } else {
                                                    c = g.format(e, tileToMercatorBounds(j, i));
                                                }
                                                return c;
                                            };
                                        } else {
                                            if (d === mtd.HISTORIC_NLSMAP) {
                                                b = 14;
                                                h = 4;
                                                f = function (j, i) {
                                                    if (isNormalizedCoord(j, i)) {
                                                        return null;
                                                    }
                                                    if (mtd.offlineMode) {
                                                        c = g.format(mtd.MAP_TYPES[d].locationUrl, i, j.x, j.y);
                                                    } else {
                                                        c = g.format(e, getRandom(5), i, j.x, j.y);
                                                    }
                                                    return c;
                                                };
                                            } else {
                                                if (d === mtd.OSM_ROAD) {
                                                    f = function (l, k) {
                                                        if (isNormalizedCoord(l, k)) {
                                                            return null;
                                                        }
                                                        if (mtd.offlineMode) {
                                                            c = g.format(mtd.MAP_TYPES[d].locationUrl, k, l.x, l.y);
                                                        } else {
                                                            var i = ["a", "b", "c"],
                                                                j = i[getRandom(i.length)];
                                                            c = g.format(e, j, k, l.x, l.y);
                                                        }
                                                        return c;
                                                    };
                                                } else {
                                                    if (d == mtd.EARTH_NIGHT) {
                                                        f = function (l, k) {
                                                            if (isNormalizedCoord(l, k)) {
                                                                return null;
                                                            }
                                                            var j = String("000000" + 256 * Math.pow(2, k)).slice(-6),
                                                                n = padTileCoordinate(l.y, k),
                                                                i = padTileCoordinate(l.x, k),
                                                                m = j + (k == 10 ? "/" + n.toString().substring(0, 2) : "");
                                                            return "http://blue-marble.de/google/tiles_n2012/" + m + "/" + j + "_" + n + "_" + i + ".jpg";
                                                        };
                                                    } else {
                                                        if ((d == mtd.NAVINFO_ROAD) || (d == mtd.NAVINFO_HYBRID)) {
                                                            f = function (j, i) {
                                                                if (isNormalizedCoord(j, i)) {
                                                                    return null;
                                                                }
                                                                if (mtd.offlineMode) {
                                                                    c = g.format(mtd.MAP_TYPES[d].locationUrl, i, j.x, j.y);
                                                                } else {
                                                                    c = g.format(e, getNavinfoTile(j, i));
                                                                }
                                                                return c;
                                                            };
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    if (isGoogleHD(d)) {
        mtd.TILE_SIZE = 512;
    } else {
        mtd.TILE_SIZE = 256;
    }
    var a = new google.maps.ImageMapType({
        isPng: true,
        opacity: 1,
        minZoom: h,
        maxZoom: b,
        name: mtd.MAP_TYPES[d].name,
        tileSize: new google.maps.Size(mtd.TILE_SIZE, mtd.TILE_SIZE),
        getTileUrl: f
    });
    if (mtd.TILE_SIZE == 512) {
        a.projection = new MercatorProjection(mtd.TILE_SIZE);
    }
    mtd.map.mapTypes.set(mtd.MAP_TYPES[d].id, a);
}
function isGoogleHD(d) {
    var a = [mtd.GOOGLE_ROAD, mtd.GOOGLE_SATELLITE, mtd.GOOGLE_HYBRID, mtd.GOOGLE_TERRAIN, mtd.GOOGLE_ROAD_NOLABEL, mtd.GOOGLE_HYBRID_NOLABEL, mtd.GOOGLE_TERRAIN_NOLABEL],
        c = false,
        b = 0;
    for (b = 0; b < a.length - 1; b++) {
        if (d == a[b]) {
            c = true;
            break;
        }
    }
    return ((c) && (mtd.GOOGLE_HD_VER !== ""));
}
function _isGoogleHD(b) {
    var a = [mtd.GOOGLE_ROAD, mtd.GOOGLE_SATELLITE, mtd.GOOGLE_HYBRID, mtd.GOOGLE_TERRAIN, mtd.GOOGLE_ROAD_NOLABEL, mtd.GOOGLE_HYBRID_NOLABEL, mtd.GOOGLE_TERRAIN_NOLABEL],
        d = false,
        c = 0;
    for (c = 0; c < a.length - 1; c++) {
        if (b == mtd.MAP_TYPES[a[c]].id) {
            d = true;
            break;
        }
    }
    return ((d) && (mtd.GOOGLE_HD_VER !== ""));
}
function getSosoMapTileNo(e, h) {
    var m = e.y,
        a = e.x,
        l = h * 4,
        d = MAP_SCOPES[l++],
        c = MAP_SCOPES[l++],
        b = MAP_SCOPES[l++],
        g = MAP_SCOPES[l];
    if (a >= d && a <= c && m >= b && m <= g) {
        m = Math.pow(2, h) - 1 - m;
    }
    var f = new StringBuilder();
    return f.format("{0}/{1}/{2}/{3}_{4}", h, Math.floor(a / 16), Math.floor(m / 16), a, m);
}
function getNavinfoTile(g, n) {
    var l = g.x,
        i = g.y,
        b = Math.ceil((n - 3) / 4),
        k = 0,
        a = 0,
        j = 0,
        d = "";
    for (var f = 0; f < b; f++) {
        var c = 1 << (4 * (b - f)),
            e = parseInt((l - k * j) / c),
            m = parseInt((i - a * j) / c);
        d += ((e > 9) ? e : "0" + e) + "" + ((m > 9) ? m : "0" + m) + "/";
        k = e;
        a = m;
        j = c;
    }
    var h = (((l) & ((1 << 20) - 1)) + (((i) & ((1 << 20) - 1)) * Math.pow(2, 20)) + (((n) & ((1 << 8) - 1)) * Math.pow(2, 40)));
    return n + "/" + d + h;
}
function getQQMapTile(j, i, m) {
    i = (m) ? (i - 1) : i;
    var e = j.x,
        c = j.y,
        f = (m) ? 2 : 1,
        c = Math.pow(2, i) * f - c - 1,
        a;
    e = f << i;
    if (0 > j.y || j.y >= e) {
        e = null;
    } else {
        if (0 <= j.x && j.x < e) {
            e = j;
        } else {
            var o = j;
            o.y = j.y;
            o.x = (j.x % e + e) % e;
            e = o;
        }
    }
    if (!e) {
        return null;
    }
    e = e.x;
    var k = new StringBuilder();
    return k.format("{0}/{1}/{2}/{3}_{4}", i, (e >> 4), (c >> 4), e, c);
}
function addMarkerLayersTile(a) {
    if (_isGoogleHD(a)) {
        mtd.TILE_SIZE = 512;
    } else {
        mtd.TILE_SIZE = 256;
    }
    var b = new google.maps.ImageMapType({
        getTileUrl: function (f, e) {
            var g = new StringBuilder(),
                d = "";
            if (a === mtd.MAP_TYPES[mtd.GOOGLE_HYBRID].id) {
                if (mtd.offlineMode) {
                    d = g.format(mtd.MAP_TYPES[mtd.GOOGLE_HYBRID].locationOverlayUrl, e, f.x, f.y);
                } else {
                    d = g.format(mtd.MAP_TYPES[mtd.GOOGLE_HYBRID].overlayTileUrl, getRandom(4), f.x, f.y, e);
                }
            } else {
                if (a === mtd.MAP_TYPES[mtd.GOOGLE_HYBRID_NOLABEL].id) {
                    if (mtd.offlineMode) {
                        d = g.format(mtd.MAP_TYPES[mtd.GOOGLE_HYBRID_NOLABEL].locationOverlayUrl, e, f.x, f.y);
                    } else {
                        d = g.format(mtd.MAP_TYPES[mtd.GOOGLE_HYBRID_NOLABEL].overlayTileUrl, getRandom(4), f.x, f.y, e);
                    }
                } else {
                    if ((a === mtd.MAP_TYPES[mtd.SOSO_HYBRID].id) || (a === mtd.MAP_TYPES[mtd.SOSO_TERRAIN].id)) {
                        if (mtd.offlineMode) {
                            d = g.format(mtd.MAP_TYPES[mtd.SOSO_HYBRID].locationOverlayUrl, e, f.x, f.y);
                        } else {
                            if (a === mtd.MAP_TYPES[mtd.SOSO_HYBRID].id) {
                                d = g.format(mtd.MAP_TYPES[mtd.SOSO_HYBRID].overlayTileUrl, getRandom(4), getQQMapTile(f, e, false));
                            } else {
                                d = g.format(mtd.MAP_TYPES[mtd.SOSO_TERRAIN].overlayTileUrl, getRandom(4), getQQMapTile(f, e, false));
                            }
                        }
                    } else {
                        if (a === mtd.MAP_TYPES[mtd.MAPABC_HYBRID].id) {
                            if (mtd.offlineMode) {
                                d = g.format(mtd.MAP_TYPES[mtd.MAPABC_HYBRID].locationOverlayUrl, e, f.x, f.y);
                            } else {
                                d = g.format(mtd.MAP_TYPES[mtd.MAPABC_HYBRID].overlayTileUrl, getRandom(4) + 1, f.x, f.y, e);
                            }
                        } else {
                            if (a === mtd.MAP_TYPES[mtd.NAVINFO_HYBRID].id) {
                                if (mtd.offlineMode) {
                                    d = g.format(mtd.MAP_TYPES[mtd.NAVINFO_HYBRID].locationOverlayUrl, e, f.x, f.y);
                                } else {
                                    d = g.format(mtd.MAP_TYPES[mtd.NAVINFO_HYBRID].overlayTileUrl, getNavinfoTile(f, e));
                                }
                            } else {
                                if (a === mtd.MAP_TYPES[mtd.EARTH_NIGHT].id) {
                                    if (mtd.offlineMode) {
                                        d = g.format(mtd.MAP_TYPES[mtd.EARTH_NIGHT].locationOverlayUrl, e, f.x, f.y);
                                    } else {
                                        d = g.format(mtd.MAP_TYPES[mtd.EARTH_NIGHT].overlayTileUrl, getRandom(4), f.x, f.y, e);
                                    }
                                } else {
                                    if ((a === mtd.MAP_TYPES[mtd.TDT_ROAD].id) || (a === mtd.MAP_TYPES[mtd.TDT_HYBRID].id) || (a === mtd.MAP_TYPES[mtd.TDT_TERRAIN].id) || (a == mtd.MAP_TYPES[mtd.GOOGLE_SATELLITE_EN].id) || (a === mtd.MAP_TYPES[mtd.BING_HYBRID].id)) {
                                        if (a === mtd.MAP_TYPES[mtd.TDT_ROAD].id) {
                                            d = g.format(mtd.MAP_TYPES[mtd.TDT_ROAD].locationOverlayUrl, e, f.x, f.y);
                                        } else {
                                            if (a === mtd.MAP_TYPES[mtd.TDT_HYBRID].id) {
                                                d = g.format(mtd.MAP_TYPES[mtd.TDT_HYBRID].locationOverlayUrl, e, f.x, f.y);
                                            } else {
                                                if (a === mtd.MAP_TYPES[mtd.GOOGLE_SATELLITE_EN].id) {
                                                    d = g.format(mtd.MAP_TYPES[mtd.GOOGLE_SATELLITE_EN].locationOverlayUrl, e, f.x, f.y);
                                                } else {
                                                    if (a === mtd.MAP_TYPES[mtd.BING_HYBRID].id) {
                                                        d = g.format(mtd.MAP_TYPES[mtd.BING_HYBRID].locationOverlayUrl, e, f.x, f.y);
                                                    }
                                                }
                                            }
                                        }
                                        if (!mtd.offlineMode) {
                                            var c = "";
                                            if (a === mtd.MAP_TYPES[mtd.TDT_ROAD].id) {
                                                c = mtd.MAP_TYPES[mtd.TDT_ROAD].overlayTileUrl;
                                            } else {
                                                if ((a === mtd.MAP_TYPES[mtd.TDT_HYBRID].id) || (a == mtd.MAP_TYPES[mtd.GOOGLE_SATELLITE_EN].id) || (a == mtd.MAP_TYPES[mtd.BING_HYBRID].id)) {
                                                    if ((a === mtd.MAP_TYPES[mtd.GOOGLE_SATELLITE_EN].id) && (e < 10)) {
                                                        c = mtd.MAP_TYPES[mtd.GOOGLE_HYBRID].overlayTileUrl;
                                                    } else {
                                                        c = mtd.MAP_TYPES[mtd.TDT_HYBRID].overlayTileUrl;
                                                    }
                                                } else {
                                                    if (a === mtd.MAP_TYPES[mtd.TDT_TERRAIN].id) {
                                                        c = mtd.MAP_TYPES[mtd.TDT_TERRAIN].overlayTileUrl;
                                                    }
                                                }
                                            }
                                            if ((a !== mtd.MAP_TYPES[mtd.GOOGLE_SATELLITE_EN].id) && (a !== mtd.MAP_TYPES[mtd.BING_HYBRID].id)) {
                                                d = g.format(c, getRandom(7), f.x, f.y, e);
                                            } else {
                                                d = g.format(c, getRandom(4), f.x, f.y, e);
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            return d;
        },
        tileSize: new google.maps.Size(mtd.TILE_SIZE, mtd.TILE_SIZE),
        isPng: true
    });
    mtd.map.overlayMapTypes.insertAt((mtd.trafficTileLayerExists) ? 1 : 0, b);
    mtd.overlayExists = true;
}
function removeOverlayMapType() {
    try {
        mtd.map.overlayMapTypes.removeAt((mtd.trafficTileLayerExists) ? 1 : 0);
    } catch (a) {}
}
function setCenterAndZoom(d, c, b) {
    var a = new google.maps.LatLng(d, c);
    mtd.map.panTo(a);
    mtd.map.setZoom(b);
}
function addNewMarker(d, i, j, a, c, k, e, l, b) {
    var h = new google.maps.LatLng(i, j);
    var g = mtd.markers[d];
    if (g) {
        g.setPosition(h);
    } else {
        g = new google.maps.Marker({
            id: d,
            position: h,
            map: null,
            draggable: false,
            title: c,
            icon: "mapfiles/markers2/marker-icon.png"
        });
        mtd.markers[d] = g;
        mtd.markerClusterer.addMarker(g);
    }
    if (!mtd.infowindow) {
        mtd.infowindow = new google.maps.InfoWindow({
            maxWidth: 200
        });
    }
    mtd.infowindow.close();
    var f = "<b>" + c + "</b><br>地址：" + k;
    if (e) {
        f += "<br>电话：" + e;
    }
    if (l) {
        f += "<br>标签：" + l;
    }
    f = '<div class="noscrollbar">' + f + "</div>";
    google.maps.event.addListener(g, "click", function () {
        mtd.infowindow.setContent(f);
        mtd.infowindow.open(mtd.map, g);
        delphiMapMarkerClickEvent(g.id.toString());
    });
    if (a) {
        if (mtd.map.getZoom() < 13) {
            mtd.map.setZoom(13);
        }
        mtd.map.panTo(h);
        mtd.infowindow.setContent(f);
        mtd.infowindow.open(mtd.map, g);
    }
}
function deleteMarker(c) {
    var a = mtd.markers.length;
    var b = mtd.markers[c];
    if (b) {
        b.setMap(null);
    }
}
function addMarker(f, d, c, e) {
    var b = mtd.map.getZoom();
    if (c < b) {
        c = b;
    }
    setCenterAndZoom(f, d, c);
    if (!mtd.marker) {
        mtd.marker = createMarker();
    }
    var a = new google.maps.LatLng(f, d);
    mtd.marker.setPosition(a);
    if (e) {
        mtd.marker.setTitle(e);
    } else {
        mtd.marker.setTitle(mtd.marker.position.toUrlValue(6));
    }
    google.maps.event.addListener(mtd.marker, "dragend", function () {
        mtd.marker.setTitle(mtd.marker.position.toUrlValue(6));
    });
}
function getPOIMarker(c) {
    var b = 0,
        a = null;
    for (b = 0; b < mtd.pois.length; b++) {
        a = mtd.pois[b];
        if (a.id === c) {
            return a;
        }
    }
    return null;
}
function deletePOIMarker(c) {
    var b = 0,
        a = null;
    for (b = mtd.pois.length - 1; b >= 0; b--) {
        a = mtd.pois[b];
        if ((a) && (a.id === c)) {
            a.setMap(null);
            mtd.pois.splice(b, 1);
        }
    }
}
function deleteTempPOIMarkers() {
    if (mtd.tempMarkerCount === 0) {
        return;
    }
    var b = 0,
        a = null;
    for (b = mtd.pois.length - 1; b >= 0; b--) {
        a = mtd.pois[b];
        if ((a) && (a.isTemp)) {
            a.setMap(null);
            mtd.pois.splice(b, 1);
        }
    }
    mtd.tempMarkerCount = 0;
}
function getPOICount() {
    return mtd.pois.length;
}
function addPOI(c, b, g, h, f, e, a) {
    var i = new google.maps.LatLng(g, h),
        d = getPOIMarker(c);
    if (d) {
        d.setOptions({
            content: f,
            position: i,
            labelContent: b,
            title: b,
            icon: "mapfiles/icons/marker-red.png",
            isTemp: false
        });
    } else {
        d = new MarkerWithLabel({
            id: c,
            position: i,
            draggable: true,
            raiseOnDrag: false,
            map: mtd.map,
            labelContent: b,
            labelAnchor: new google.maps.Point(30, 42),
            labelClass: "labeledMarker_other",
            icon: (e) ? "mapfiles/icons/marker-blue.png" : "mapfiles/icons/marker-red.png",
            title: b,
            content: f,
            isTemp: e
        });
        mtd.pois.push(d);
    }
    google.maps.event.addListener(d, "click", function () {
        var k = d.getPosition();
        delphiMarkerCompletedEvent(d.id.toString(), k.lat(), k.lng(), d.title, d.content, d.isTemp);
    });
    google.maps.event.addListener(d, "dragend", function () {
        var k = d.getPosition();
        delphiMarkerCompletedEvent(d.id.toString(), k.lat(), k.lng(), d.title, d.content, d.isTemp);
    });
    if (a) {
        mtd.map.setCenter(i);
        var j = mtd.map.getZoom();
        mtd.map.setZoom((j < 14) ? 14 : j);
    }
}
google.maps.Map.prototype.zoomIn = function () {
    var a = this.getZoom();
    return this.setZoom(a + 1);
};
google.maps.Map.prototype.zoomOut = function () {
    var a = this.getZoom();
    return this.setZoom(a - 1);
};
if (!google.maps.Polygon.prototype.getBounds) {
    google.maps.Polygon.prototype.getBounds = function (c) {
        var b = new google.maps.LatLngBounds(),
            f = this.getPaths(),
            e, d, a;
        for (d = 0; d < f.getLength(); d++) {
            e = f.getAt(d);
            for (a = 0; a < e.getLength(); a++) {
                b.extend(e.getAt(a));
            }
        }
        return b;
    };
}
if (!google.maps.Polyline.prototype.getBounds) {
    google.maps.Polyline.prototype.getBounds = function (b) {
        var a = new google.maps.LatLngBounds();
        this.getPath().forEach(function (c) {
            a.extend(c);
        });
        return a;
    };
}
function getAreaString(b) {
    var c = "";
    if (b > 1000000) {
        b = parseFloat(b / 1000000).toFixed(3);
        if (b > 1000) {
            b = Math.floor(b);
        }
        c = "平方公里";
    } else {
        b = parseFloat(b).toFixed(3);
        if (b > 1000) {
            b = Math.floor(b);
        }
        c = "平方米";
    }
    var a = (mtd.showAreaLabel) ? ("面积:" + b + c) : "";
    return a;
}
function computeCircleArea(a) {
    return (Math.PI * Math.pow(a, 2));
}
function computePolygonArea(a) {
    return google.maps.geometry.spherical.computeArea(a.getPath());
}
function computeRectangleArea(b) {
    var c = b.getBounds(),
        d = c.getNorthEast(),
        a = c.getSouthWest(),
        e = [];
    e.push(d);
    e.push(new google.maps.LatLng(a.lat(), d.lng()));
    e.push(a);
    e.push(new google.maps.LatLng(d.lat(), a.lng()));
    return google.maps.geometry.spherical.computeArea(e);
}
function showPolylineLenght(b) {
    var c = Math.round(google.maps.geometry.spherical.computeLength(b.getPath())),
        d = "米";
    if (c > 1000) {
        c = (c / 1000).toFixed(3);
        if (c > 1000) {
            c = Math.floor(c);
        }
        d = "公里";
    }
    var e = b.getPath().getArray(),
        a = e[e.length - 1];
    createClearButton(a, "总长度:" + c + d, 20, 15);
    mtd.rulerPolyline = b;
}
function createClearButton(b, c, a, e) {
    var d = new google.maps.MarkerImage("mapfiles/images/clear.png", new google.maps.Size(16, 16), new google.maps.Point(0, 0), new google.maps.Point(a, e));
    if (mtd.clearButton) {
        mtd.clearButton.setOptions({
            map: mtd.map,
            position: b,
            icon: d,
            labelContent: c
        });
    } else {
        mtd.clearButton = new MarkerWithLabel({
            position: b,
            map: mtd.map,
            labelContent: c,
            labelAnchor: new google.maps.Point(-4, -3),
            labelClass: "labels",
            title: "清除",
            icon: d
        });
    }
    google.maps.event.addListener(mtd.clearButton, "click", function () {
        clearShape();
        if (mtd.clearButton) {
            mtd.clearButton.setMap(null);
            mtd.clearButton = null;
        }
    });
}
function registerCustomPolygonClickEvent(a) {
    if (((a.type == "polygon") && (a.getPath().length <= 100)) || (a.type == "rectangle")) {
        google.maps.event.addListener(a, "click", function () {
            a.setEditable(!a.getEditable());
        });
    }
    if ((a.type == "polygon") || (a.type == "rectangle")) {
        google.maps.event.addListener(a, "dragend", function () {
            mtd.isDraggingShape = false;
        });
        google.maps.event.addListener(a, "dragstart", function () {
            mtd.isDraggingShape = true;
        });
    }
}
function encodePath(b) {
    var g = [],
        a = b.split(";");
    for (var d = a.length - 1; d >= 0; d--) {
        var h = a[d].split(","),
            f = h[1],
            c = h[0];
        g.push(new google.maps.LatLng(f, c));
    }
    var e = google.maps.geometry.encoding.encodePath(g);
    setJsReturnValue(e);
    return decode_Path;
}
function decodePath(a) {
    var c = google.maps.geometry.encoding.decodePath(a);
    var b = c.toString();
    setJsReturnValue(b);
    return b;
}
function showBoundary(h) {
    var l = google.maps.geometry.encoding.decodePath(h);
    var j = (l.length === 2);
    if (j) {
        var f, g, c, e;
        f = Math.max(l[0].lat(), l[1].lat());
        g = Math.max(l[0].lng(), l[1].lng());
        c = Math.min(l[0].lat(), l[1].lat());
        e = Math.min(l[0].lng(), l[1].lng());
    }
    clearShape();
    if (j) {
        var k = new google.maps.LatLng(c, e),
            d = new google.maps.LatLng(f, g);
        mtd.customPolygon = new google.maps.Rectangle();
        mtd.customPolygon.type = "rectangle";
        mtd.customPolygon.setBounds(new google.maps.LatLngBounds(k, d));
        google.maps.event.addListener(mtd.customPolygon, "bounds_changed", function () {
            rectangleToElement(mtd.customPolygon);
        });
    } else {
        mtd.customPolygon = new google.maps.Polygon();
        mtd.customPolygon.setPaths(l);
        mtd.customPolygon.type = "polygon";
        google.maps.event.addListener(mtd.customPolygon.getPath(), "set_at", function () {
            polygonToElement(mtd.customPolygon);
        });
        google.maps.event.addListener(mtd.customPolygon.getPath(), "insert_at", function () {
            polygonToElement(mtd.customPolygon);
        });
    }
    mtd.customPolygon.setOptions(mtd.polyOptions);
    if (l.length < 20) {
        mtd.customPolygon.setEditable(true);
    } else {
        mtd.customPolygon.setEditable(false);
    }
    mtd.customPolygon.setMap(mtd.map);
    var i = 0;
    if (j) {
        i = computeRectangleArea(mtd.customPolygon);
    } else {
        i = google.maps.geometry.spherical.computeArea(mtd.customPolygon.getPath());
    }
    var b = mtd.customPolygon.getBounds();
    var a = b.getCenter();
    mtd.map.fitBounds(b);
    createClearButton(l[0], getAreaString(i), 0, 0);
    google.maps.event.addListener(mtd.customPolygon, "mousemove", listenerMousemoveEvent);
    if (j) {
        rectangleToElement(mtd.customPolygon);
    } else {
        polygonToElement(mtd.customPolygon);
    }
    return true;
}
function getCoordinates(g) {
    var e = 60,
        c = 360 / e,
        f = 0,
        b = g.getCenter(),
        a = g.getRadius() / 1000,
        h = [],
        d;
    for (d = 0;
    d < e - 1; d++) {
        h[d] = b.destinationPoint(f, a);
        f += c;
    }
    return h;
}
Number.prototype.toRad = function () {
    return this * Math.PI / 180;
};
Number.prototype.toDeg = function () {
    return this * 180 / Math.PI;
};
google.maps.LatLng.prototype.destinationPoint = function (a, f) {
    f = f / 6371;
    a = a.toRad();
    var e = this.lat().toRad(),
        c = this.lng().toRad(),
        d = Math.asin(Math.sin(e) * Math.cos(f) + Math.cos(e) * Math.sin(f) * Math.cos(a)),
        b = c + Math.atan2(Math.sin(a) * Math.sin(f) * Math.cos(e), Math.cos(f) - Math.sin(e) * Math.sin(d));
    if (isNaN(d) || isNaN(b)) {
        return null;
    }
    return new google.maps.LatLng(d.toDeg(), b.toDeg());
};

function circleToElement(b) {
    var j = 60,
        h = 360 / j,
        d = 0,
        a = b.getCenter(),
        f = b.getRadius() / 1000,
        g = new StringBuilder(),
        c = null,
        e;
    for (e = j - 1; e >= 0; e--) {
        c = a.destinationPoint(d, f);
        g.append(c.lng().toFixed(5));
        g.append(",");
        g.append(c.lat().toFixed(5));
        if (e != 0) {
            g.append(",");
        }
        d += h;
    }
    createClearButton(a, getAreaString(computeCircleArea(f * 1000)), 20, 15);
    mtd.customPolygon = b;
    mtd.customPolygon.type = "circle";
    delphiPlotLatlngsEvent(g.toString());
}
function rectangleToElement(c) {
    var d = c.getBounds().getNorthEast(),
        b = c.getBounds().getSouthWest(),
        a = d.lng().toFixed(5) + "," + d.lat().toFixed(5) + "," + b.lng().toFixed(5) + "," + b.lat().toFixed(5);
    createClearButton(d, getAreaString(computeRectangleArea(c)), -5, 16);
    mtd.customPolygon = c;
    mtd.customPolygon.type = "rectangle";
    delphiPlotLatlngsEvent(a);
}
function polygonToElement(c) {
    var e = new StringBuilder(),
        d = c.getPath().getArray(),
        a = d.length,
        b;
    for (b = a - 1; b >= 0; b--) {
        e.append(d[b].lng().toFixed(5));
        e.append(",");
        e.append(d[b].lat().toFixed(5));
        if (b != 0) {
            e.append(",");
        }
    }
    createClearButton(d[a - 1], getAreaString(computePolygonArea(c)), 20, 15);
    mtd.customPolygon = c;
    mtd.customPolygon.type = "polygon";
    delphiPlotLatlngsEvent(e.toString());
}
function listenerMousemoveEvent(c) {
    var b = c.latLng.lat(),
        a = c.latLng.lng();
    delphiMapMousemoveEvent(b, a);
}
function clearShape() {
    try {
        if (mtd.customPolygon) {
            mtd.customPolygon.setMap(null);
            mtd.customPolygon = null;
        }
        if (mtd.rulerPolyline) {
            mtd.rulerPolyline.setMap(null);
            mtd.rulerPolyline = null;
        }
    } catch (a) {}
}
function showDrawingManager() {
    if (!mtd.drawingManager) {
        initDrawingManager();
    }
    mtd.drawingManager.setOptions({
        drawingControl: true
    });
}
function hideDrawingManager() {
    if (mtd.drawingManager) {
        mtd.drawingManager.setOptions({
            drawingControl: false
        });
    }
}
function initDrawingManager() {
    mtd.drawingManager = new google.maps.drawing.DrawingManager({
        drawingMode: null,
        drawingControl: true,
        drawingControlOptions: {
            position: google.maps.ControlPosition.TOP_LEFT,
            drawingModes: [google.maps.drawing.OverlayType.MARKER, google.maps.drawing.OverlayType.POLYLINE, google.maps.drawing.OverlayType.CIRCLE, google.maps.drawing.OverlayType.POLYGON, google.maps.drawing.OverlayType.RECTANGLE]
        },
        polylineOptions: mtd.polyOptions,
        rectangleOptions: mtd.polyOptions,
        circleOptions: mtd.polyOptions,
        polygonOptions: mtd.polyOptions,
        markerOptions: {
            draggable: true,
            icon: "mapfiles/markers2/red-dot.png"
        }
    });
    mtd.drawingManager.setMap(mtd.map);
    google.maps.event.addDomListener(mtd.drawingManager, "polygoncomplete", function (a) {
        clearShape();
        polygonToElement(a);
        google.maps.event.addListener(a.getPath(), "set_at", function (b) {
            polygonToElement(a);
        });
        google.maps.event.addListener(a.getPath(), "insert_at", function (b) {
            polygonToElement(a);
        });
        mtd.drawingManager.setDrawingMode(null);
        google.maps.event.addListener(mtd.customPolygon, "mousemove", listenerMousemoveEvent);
    });
    google.maps.event.addDomListener(mtd.drawingManager, "circlecomplete", function (a) {
        clearShape();
        circleToElement(a);
        google.maps.event.addListener(a, "radius_changed", function () {
            circleToElement(a);
        });
        google.maps.event.addListener(a, "center_changed", function () {
            circleToElement(a);
        });
        mtd.drawingManager.setDrawingMode(null);
        google.maps.event.addListener(mtd.customPolygon, "mousemove", listenerMousemoveEvent);
    });
    google.maps.event.addDomListener(mtd.drawingManager, "rectanglecomplete", function (a) {
        clearShape();
        rectangleToElement(a);
        google.maps.event.addListener(a, "bounds_changed", function () {
            rectangleToElement(a);
        });
        mtd.drawingManager.setDrawingMode(null);
        google.maps.event.addListener(mtd.customPolygon, "mousemove", listenerMousemoveEvent);
    });
    google.maps.event.addDomListener(mtd.drawingManager, "polylinecomplete", function (a) {
        clearShape();
        google.maps.event.addListener(a.getPath(), "set_at", function () {
            showPolylineLenght(a);
        });
        google.maps.event.addListener(a.getPath(), "insert_at", function () {
            showPolylineLenght(a);
        });
        showPolylineLenght(a);
        mtd.drawingManager.setDrawingMode(null);
    });
    google.maps.event.addDomListener(mtd.drawingManager, "markercomplete", function (a) {
        var d = a.getPosition();
        a.setMap(null);
        mtd.tempMarkerCount = mtd.tempMarkerCount + 1;
        var c = getUniqueId(),
            b = "我的标记 " + (getPOICount() + 1).toString();
        addPOI(c, b, d.lat(), d.lng(), "", true, false);
        mtd.drawingManager.setDrawingMode(null);
        delphiMarkerCompletedEvent(c.toString(), d.lat(), d.lng(), b, "", true);
    });
}
function getNewPosition() {
    return mtd.newPosition;
}
function fullView() {
    setCenterAndZoom(32.694866, 105.996094, 4);
}
function showCurrentView() {
    clearShape();
    mtd.customPolygon = new google.maps.Rectangle();
    mtd.customPolygon.setOptions(mtd.polyOptions);
    mtd.customPolygon.setBounds(mtd.map.getBounds());
    rectangleToElement(mtd.customPolygon);
    mtd.customPolygon.setMap(mtd.map);
}
function getCurrentZoom() {
    return mtd.currentZoom;
}
function setCurrentZoom(a) {
    mtd.currentZoom = a;
}
function createMarker() {
    return new google.maps.Marker({
        map: mtd.map,
        draggable: true,
        icon: "mapfiles/markers2/red-dot.png"
    });
}
function formatLenght(a) {
    var b = " m";
    if (a > 1000) {
        a = (a / 1000).toFixed(3);
        if (a > 1000) {
            a = Math.floor(a);
        }
        b = " km";
    }
    return (a.toFixed(3) + b);
}
function addNavigationMarker(h, i, d, c, o, k) {
    var n = new google.maps.LatLng(h, i);
    if (mtd.previousPoint) {
        var g = google.maps.geometry.spherical.computeDistanceBetween(mtd.previousPoint, n);
        if (g > 500) {
            return 0;
        }
        mtd.totalDistance += g;
    }
    if (!mtd.navigationCircle) {
        mtd.navigationCircle = new google.maps.Circle({
            center: n,
            map: mtd.map,
            radius: 100,
            strokeColor: "#2a5caa",
            fillColor: "#2a5caa",
            fillOpacity: 0.1,
            strokeWeight: 1,
            strokeOpacity: 0.9,
            visible: true,
            editable: false
        });
    }
    mtd.navigationCircle.setCenter(n);
    var e = {
        url: getIconUrl(d),
        size: new google.maps.Size(30, 30),
        origin: new google.maps.Point(0, 0),
        anchor: new google.maps.Point(15, 15)
    };
    if (!mtd.navigationMarker) {
        mtd.navigationMarker = new google.maps.Marker({
            map: mtd.map
        });
    }
    mtd.navigationMarker.setPosition(n);
    mtd.navigationMarker.setIcon(e);
    if (!k) {
        k = mtd.navigationMarker.position.toUrlValue(5);
    }
    d = (d > 50) ? 8 : d;
    var f = "<b>位置：</b>" + k + "<br/><b>卫星：</b>" + d + " 颗<br/><b>海拔：</b>" + Math.floor(c) + " m<br/><b>里程：</b>" + formatLenght(mtd.totalDistance) + "<br/><b>时间：</b>" + o + "<br>";
    if (!mtd.infowindow) {
        mtd.infowindow = new google.maps.InfoWindow();
    }
    mtd.infowindow.setContent(f);
    mtd.navigationMarker.setTitle(k);
    google.maps.event.addListener(mtd.navigationMarker, "click", function () {
        if (mtd.infowindow) {} else {
            mtd.infowindow = new google.maps.InfoWindow();
        }
        mtd.infowindow.setContent(f);
        mtd.infowindow.open(mtd.map, mtd.navigationMarker);
    });
    var b = mtd.map.getBounds();
    if (!b.contains(n)) {
        mtd.map.panTo(n);
    }
    if (mtd.previousPoint) {
        var a = ["#5666F6", "#C3242A", "#31C122", "#C031D0"],
            m = [];
        m.push(mtd.previousPoint);
        m.push(n);
        var l = {
            path: m,
            map: mtd.map,
            strokeColor: "#f20c00",
            strokeOpacity: 0.8,
            strokeWeight: 2
        };
        var j = new google.maps.Polyline(l);
        mtd.polylines.push(j);
        if (mtd.polylines.length > 200) {
            mtd.polylines[0].setMap(null);
            mtd.polylines.splice(0, 1);
        }
    } else {
        mtd.map.panTo(n);
        mtd.map.setZoom(17);
    }
    mtd.previousPoint = n;
}
function setOfflineMode() {
    mtd.offlineMode = true;
}
function setOnlineMode() {
    mtd.offlineMode = false;
}
function tileExists(b) {
    return true;
    if (!mtd.isMSIE) {
        return false;
    }
    try {
        if (!mtd.fileSystemObject) {
            mtd.fileSystemObject = new ActiveXObject("Scripting.FileSystemObject");
        }
        return mtd.fileSystemObject.FileExists(b);
    } catch (a) {
        return false;
    }
}
function addTrafficTileLayer() {
    var a = new google.maps.ImageMapType({
        getTileUrl: function (d, c) {
            if (isNormalizedCoord(d, c)) {
                return null;
            }
            if ((c < 7) || (c > 17)) {
                return null;
            }
            var e = new StringBuilder(),
                b = e.format("http://tm.mapabc.com/trafficengine/mapabc/traffictile?v=1.0&t=1&zoom={0}&x={1}&y={2}", 17 - c, d.x, d.y);
            return b;
        },
        tileSize: new google.maps.Size(mtd.TILE_SIZE, mtd.TILE_SIZE),
        isPng: true
    });
    mtd.map.overlayMapTypes.insertAt(0, a);
    mtd.trafficTileLayerExists = true;
}
function removeTrafficTileLayer() {
    try {
        mtd.map.overlayMapTypes.removeAt(0);
    } catch (a) {}
    mtd.trafficTileLayerExists = false;
}